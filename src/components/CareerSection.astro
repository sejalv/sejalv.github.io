---
// components/CareerSection.astro
const careerData = await import('../data/career.md');
const careerHistory = careerData.frontmatter.careerHistory;

export interface Props {
  title?: string;
  showTitle?: boolean;
  gridColumns?: number;
  maxJobs?: number;
}

const {
  title = "Experience",
  showTitle = true,
  gridColumns = 4,
  maxJobs
} = Astro.props;

// Apply maxJobs filter if specified
const displayedJobs = maxJobs ? careerHistory.slice(0, maxJobs) : careerHistory;
---

<section id="career-section" class="career-section">
  {showTitle && (
    <header class="major">
      <h2>{title}</h2>
    </header>
  )}

  <div class="career-grid" style={`grid-template-columns: repeat(${gridColumns}, 1fr);`}>
    {displayedJobs.map((job) => (
      <article class="career-card">
        <div class="career-content">
          <h3>{job.company}</h3>
          <span class="date">{job.period}</span>
          <span class="date">{job.location}</span>
          <p class="job-title">{job.title}</p>
          <p>{job.description}</p>
        </div>
      </article>
    ))}
  </div>
</section>

<style>
  .career-section {
   background: rgba(255, 255, 255, 0.02);
   border-radius: 8px;
   border: 1px solid rgba(255, 255, 255, 0.1);
   margin: 2em 0;
   padding: 2.5em 2em;
  }

  .career-grid {
    display: grid;
    gap: 2em;
    margin: 2em 0;
  }

  .career-card {
    background: rgba(0, 0, 0, 0.05);
    border-radius: 4px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
  }

  .career-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  .career-content {
    padding: 1.5em;
  }

  .career-content h3 {
    margin-bottom: 0.5em;
    font-size: 1.5em;
  }

  .date {
    display: block;
    font-size: 0.8em;
    font-weight: bold;
    color: rgba(212, 212, 255, 0.5);
    margin-bottom: 1em;
  }

  .job-title {
    font-style: italic;
    margin-bottom: 1em;
  }

  .description {
    font-size: 0.9em;
    line-height: 1.4;
    margin-bottom: 1em;
    color: rgba(255, 255, 255, 0.8);
  }

  .achievements {
    margin: 1em 0;
  }

  .achievements h4 {
    font-size: 0.9em;
    margin-bottom: 0.5em;
    color: rgba(255, 255, 255, 0.9);
  }

  .achievements ul {
    list-style: none;
    padding-left: 0;
  }

  .achievements li {
    font-size: 0.8em;
    line-height: 1.3;
    margin-bottom: 0.3em;
    color: rgba(255, 255, 255, 0.7);
    position: relative;
    padding-left: 1em;
  }

  .achievements li::before {
    content: "â€¢";
    color: #87c5a4;
    position: absolute;
    left: 0;
  }

  .technologies {
    margin-top: 1em;
  }

  .technologies h4 {
    font-size: 0.9em;
    margin-bottom: 0.5em;
    color: rgba(255, 255, 255, 0.9);
  }

  .tech-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.3em;
  }

  .tech-tag {
    background: rgba(135, 197, 164, 0.2);
    color: #87c5a4;
    padding: 0.2em 0.5em;
    border-radius: 3px;
    font-size: 0.7em;
    border: 1px solid rgba(135, 197, 164, 0.3);
  }

  /* Responsive design */
  @media (max-width: 1200px) {
    .career-grid {
      grid-template-columns: repeat(3, 1fr) !important;
    }
  }

  @media (max-width: 900px) {
    .career-grid {
      grid-template-columns: repeat(2, 1fr) !important;
    }
  }

  @media (max-width: 600px) {
    .career-grid {
      grid-template-columns: 1fr !important;
    }
  }
</style>