---
// components/Modal.astro
export interface Props {
  id: string;
  title: string;
  type: 'career' | 'book';
}

const { id, title, type } = Astro.props;
---

<div id={id} class="modal-overlay" data-modal-type={type}>
  <div class="modal-container">
    <div class="modal-header">
      <h3 class="modal-title">{title}</h3>
      <button class="modal-close" aria-label="Close modal">&times;</button>
    </div>
    <div class="modal-content">
      <slot />
    </div>
  </div>
</div>

<style>
  .modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
  }

  .modal-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .modal-container {
    background: #2a2f4a;
    border-radius: 8px;
    max-width: 90vw;
    max-height: 90vh;
    width: 600px;
    overflow-y: auto;
    transform: scale(0.8);
    transition: transform 0.3s ease;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
  }

  .modal-overlay.active .modal-container {
    transform: scale(1);
  }

  .modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.5rem 2rem;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .modal-title {
    color: #ffffff;
    margin: 0;
    font-size: 1.4em;
  }

  .modal-close {
    background: none;
    border: none;
    color: #ffffff;
    font-size: 2rem;
    cursor: pointer;
    padding: 0;
    line-height: 1;
    transition: color 0.3s ease;
    outline: none;
    box-shadow: none;
  }

  .modal-close:hover {
    color: #87c5a4;
  }

  .modal-content {
    padding: 2rem;
    color: #ffffff;
  }

  /* Career modal specific styles */
  .modal-overlay[data-modal-type="career"] .modal-container {
    width: 700px;
  }

  /* Book modal specific styles */
  .modal-overlay[data-modal-type="book"] .modal-container {
    width: 550px;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .modal-container {
      width: 95vw;
      max-height: 95vh;
    }

    .modal-header {
      padding: 1rem 1.5rem;
    }

    .modal-content {
      padding: 1.5rem;
    }

    .modal-title {
      font-size: 1.2em;
    }
  }
</style>

<script>
  // Modal functionality
  document.addEventListener('DOMContentLoaded', function() {
    const modalOverlays = document.querySelectorAll('.modal-overlay');
    
    modalOverlays.forEach(overlay => {
      const closeBtn = overlay.querySelector('.modal-close');
      
      // Close modal when clicking close button
      closeBtn?.addEventListener('click', () => {
        overlay.classList.remove('active');
        document.body.style.overflow = 'auto';
      });
      
      // Close modal when clicking outside
      overlay.addEventListener('click', (e) => {
        if (e.target === overlay) {
          overlay.classList.remove('active');
          document.body.style.overflow = 'auto';
        }
      });
    });
    
    // Close modal with Escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        const activeModal = document.querySelector('.modal-overlay.active');
        if (activeModal) {
          activeModal.classList.remove('active');
          document.body.style.overflow = 'auto';
        }
      }
    });
  });
</script>