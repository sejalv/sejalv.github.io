---
// components/BookshelfPanel.astro
export interface Props {
  showTitle?: boolean;
  minBooks?: number;
  maxBooks?: number;
  title?: string;
}

const { showTitle = true, minBooks = 0, maxBooks = 1, title = "Bookshelf" } = Astro.props;

const booksData = await Astro.glob('../data/books.md');
const books = booksData[0].frontmatter.books;

const featuredBooks = books.slice(minBooks, maxBooks);

// filter by title/author/property
// const bookByTitle = books.find(book => book.title === "Specific Book Title");
// const booksByAuthor = books.filter(book => book.author === "Author Name");
---

<section id="bookshelf-showcase" class="bookshelf-panel">
  {showTitle && (
    <header class="major">
      <h2>{title}</h2>
    </header>
  )}
  <p>Currently reading...</p>

  <div class="showcase-grid">
    {featuredBooks.map((book) => (
      <article class="showcase-card">
        <div class="showcase-image">
          <img src={book.image} alt={book.title} />
        </div>
        <div class="showcase-content">
          <h4>{book.title}</h4>
          <span class="author">{book.author}</span>
          {book.subtext && <p class="subtext"><i>{book.subtext}</i></p>}
          <p class="excerpt">{book.excerpt}</p>
        </div>
      </article>
    ))}
    <a href="/bookshelf" class="view-all-link">View full bookshelf â†’</a>
  </div>
</section>

<style>
  /* Bookshelf Panel Styles */
  .bookshelf-panel {
    background: rgba(255, 255, 255, 0.02);
    border-radius: 8px;
    padding: 2.5em 2em;
    margin: 2em 0;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .view-all-link {
    font-size: 0.9em;
    color: #87c5a4;
    text-decoration: none;
    border-bottom: 1px solid transparent;
    transition: border-bottom-color 0.3s ease;
    margin-left: 1em;
  }

  .view-all-link:hover {
    border-bottom-color: #87c5a4;
  }

  .showcase-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2em;
    margin-top: 2em;
  }

  .showcase-card {
    display: flex;
    background: rgba(0, 0, 0, 0.03);
    border-radius: 6px;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 1px solid rgba(255, 255, 255, 0.05);
  }

  .showcase-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  }

  .showcase-image {
    flex-shrink: 0;
    width: 80px;
    height: 120px;
    overflow: hidden;
  }

  .showcase-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .showcase-content {
    padding: 1em 1.5em;
    flex: 1;
  }

  .showcase-content h4 {
    margin: 0 0 0.5em 0;
    font-size: 1.1em;
    line-height: 1.3;
  }

  .author {
    display: block;
    font-size: 0.8em;
    font-weight: bold;
    color: rgba(212, 212, 255, 0.6);
    margin-bottom: 0.5em;
  }

  .subtext {
    font-size: 0.85em;
    margin: 0.5em 0;
    color: rgba(255, 255, 255, 0.8);
  }

  .excerpt {
    font-size: 0.8em;
    line-height: 1.4;
    color: rgba(255, 255, 255, 0.7);
    margin: 0.5em 0 0 0;
  }

  /* Responsive design */
  @media (max-width: 768px) {
    .showcase-card {
      flex-direction: column;
    }

    .showcase-image {
      width: 100%;
      height: 200px;
    }

    .showcase-grid {
      grid-template-columns: 1fr;
    }
  }
</style>